// 单行注释：测试关键字、标识符、十进制整数
const int func_main(int _a, 0b101 /* 多行注释：八进制0123、十六进制0Xabc */) {
    int b_2 = 123;          // 十进制整数 + 下划线结尾的标识符
    int c = 0123;           // 八进制整数（0开头，仅含0-7）
    int d = 0x45F;          // 十六进制整数（0x开头，含a-f）
    int e = 0X678;          // 十六进制整数（0X开头，大写）
    
    // 测试所有运算符和比较符
    if (a == 0 && b != 1) { // IF关键字 + EQ(==) + AND(&&) + NEQ(!=)
        if (c < 2 || d > 3) { // OR(||) + LT(<) + GT(>)
            if (e <= 4 || f >= 5) { // LE(<=) + GE(>=)
                break;      // BREAK关键字
            }
        }
    }
    
    // 测试循环和赋值
    while (a < 10) {        // WHILE关键字
        a = a + 1;          // ASSIGN(=) + PLUS(+)
        if (a % 2 == 0) {   // MOD(%)
            continue;       // CONTINUE关键字
        }
    }
    
    // 测试乘法、除法和返回值
    int res = (a * b) / 2;  // MUL(*) + DIV(/) + 括号
    return res;             // RETURN关键字
}

/* 多行注释：
   1. 验证多行注释被完全过滤
   2. 注释中包含关键字（如int、const）不会被识别
*/